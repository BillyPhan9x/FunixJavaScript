'use strict';

// Lab 4.1 - 4.6
// Lab 4.1 H√†m 
console.log('Lab 4.1 H√†m ==>');
// Vi·∫øt h√†m 'describeCountry' nh·∫≠n ba tham s·ªë: 'country', 'population' v√† 'capitalCity'. D·ª±a v√†o input n√†y
const describeCountry = function (country, population, capitalCity) {
    // console.log(country, population, capitalCity);
    // h√†m tr·∫£ v·ªÅ string v·ªõi ƒë·ªãnh d·∫°ng nh∆∞ sau: 'Finland has 6 million people and its capital city is Helsinki'.
    return ` ${country} has ${population} million people and its capital city is ${capitalCity}.`;
}

// G·ªçi h√†m n√†y 3 l·∫ßn v·ªõi d·ªØ li·ªáu ƒë·∫ßu v√†o cho 3 n∆∞·ªõc kh√°c nhau. L∆∞u c√°c gi√° tr·ªã tr·∫£ v·ªÅ ·ªü 3 bi·∫øn kh√°c nhau
const vietnam = describeCountry('VietNam', 98, 'HaNoi');
const canada = describeCountry('Canada', 38, 'Ottawa');
const japan = describeCountry('Japan', 125, 'Tokyo');
// describeCountry('Thailand', 70, 'Bangkok');

// In ch√∫ng ra console
console.log(vietnam);
console.log(canada);
console.log(japan);
// console.log(describeCountry('Thailand', 70, 'Bangkok'));



// Lab 4.2. Khai b√°o h√†m v·ªõi bi·ªÉu th·ª©c h√†m 
console.log('Lab 4.2 Khai b√°o h√†m v·ªõi bi·ªÉu th·ª©c h√†m ==>');

// D√¢n s·ªë th·∫ø gi·ªõi l√† 7.9 t·ª∑ ng∆∞·ªùi. T·∫°o khai b√°o h√†m 'percentageOfWorld1' nh·∫≠n m·ªôt gi√° tr·ªã 'population'
let populationWorld = 7900;
// T·∫°o khai b√°o h√†m 'percentageOfWorld1' nh·∫≠n m·ªôt gi√° tr·ªã 'population'
function percentageOfWorld1(population) {
    // tr·∫£ v·ªÅ ph·∫ßn trƒÉm d√¢n s·ªë th·∫ø gi·ªõi theo d√¢n s·ªë ƒë√£ cho. V√≠ d·ª•: Trung Qu·ªëc c√≥ 1.441 t·ª∑ ng∆∞·ªùi, chi·∫øm 18.2% d√¢n s·ªë th·∫ø gi·ªõi.
    // ƒê·ªÉ t√≠nh ph·∫ßn trƒÉm, chia gi√° tr·ªã 'population' ƒë√£ bi·∫øt cho 7900 r·ªìi nh√¢n v·ªõi 100.
    return (population / populationWorld) * 100;
}

// G·ªçi 'percentageOfWorld1' cho 3 d√¢n s·ªë c·ªßa c√°c qu·ªëc gia b·∫•t k·ª≥, l∆∞u k·∫øt qu·∫£ v√†o c√°c bi·∫øn.
const vietnam1 = percentageOfWorld1(98);
const canada1 = percentageOfWorld1(38);
const japan1 = percentageOfWorld1(125);

// in ch√∫ng ra console.
console.log(vietnam1);
console.log(canada1);
console.log(japan1);

// T·∫°o bi·ªÉu th·ª©c h√†m th·ª±c hi·ªán ƒëi·ªÅu t∆∞∆°ng t·ª±, g·ªçi l√† 'percentageOfWorld2' v√† c≈©ng g·ªçi n√≥ v·ªõi 3 d√¢n s·ªë theo qu·ªëc gia (c√≥ th·ªÉ c√≥ c√πng s·ªë d√¢n).
const percentageOfWorld2 = function (population) {
    return (population / populationWorld) * 100;
}

const vietnam2 = percentageOfWorld2(98);
const canada2 = percentageOfWorld2(38);
const japan2 = percentageOfWorld2(125);

console.log(vietnam2);
console.log(canada2);
console.log(japan2);



// Lab 4.3 H√†m m≈©i t√™n
console.log('Lab 4.3 H√†m m≈©i t√™n ==>');
// Th·ª±c hi·ªán l·∫°i b√†i lab tr∆∞·ªõc, nh∆∞ng l·∫ßn n√†y h√£y t·∫°o m·ªôt h√†m m≈©i t√™n l√† 'percentageOfWorld3'.
const percentageOfWorld3 = population => (population / populationWorld) * 100;

const vietnam3 = percentageOfWorld2(98);
const canada3 = percentageOfWorld2(38);
const japan3 = percentageOfWorld2(125);

console.log(vietnam3);
console.log(canada3);
console.log(japan3);



// Lab 4.4 H√†m g·ªçi h√†m
console.log('Lab 4.4 H√†m g·ªçi h√†m ==>');
// T·∫°o m·ªôt h√†m l√† 'describePopulation'. S·ª≠ d·ª•ng ki·ªÉu h√†m m√† b·∫°n mu·ªën nh·∫•t. H√†m n√†y nh·∫≠n hai ƒë·ªëi s·ªë l√† 'country' v√† 'population'
function describePopulation(country, population) {
    // tr·∫£ v·ªÅ string nh∆∞ sau: 'China has 1441 million people, which is about 18.2% of the world'.
    return ` ${country} has ${population} million people, which is about ${percentageOfWorld1(population).toFixed(2)}% of the world`;
}

// ƒê·ªÉ t√≠nh ph·∫ßn trƒÉm 'describePopulation', h√£y g·ªçi 'percentageOfWorld1' m√† b·∫°n ƒë√£ t·∫°o tr∆∞·ªõc ƒë√≥.

// G·ªçi 'describePopulation' v·ªõi d·ªØ li·ªáu cho 3 n∆∞·ªõc b·∫•t k·ª≥.
console.log(describePopulation('VietNam', 98));
console.log(describePopulation('Canada', 38));
console.log(describePopulation('Japan', 125));


// Lab 4.5 Gi·ªõi thi·ªáu v·ªÅ Array
console.log('Lab 4.5 Gi·ªõi thi·ªáu v·ªÅ Array ==>');

// T·∫°o m·ªôt array ch·ª©a 4 gi√° tr·ªã d√¢n s·ªë c·ªßa 4 qu·ªëc gia b·∫•t k·ª≥. B·∫°n c√≥ th·ªÉ s·ª≠ d·ª•ng c√°c gi√° tr·ªã ƒë√£ d√πng tr∆∞·ªõc ƒë√≥. L∆∞u array n√†y v√†o m·ªôt bi·∫øn l√† 'populations'.
const populations = [98, 38, 125, 70];

// In ra console xem li·ªáu array c√≥ 4 ph·∫ßn t·ª≠ hay kh√¥ng (true ho·∫∑c false).
console.log(populations);
console.log(populations.length);

// T·∫°o m·ªôt array l√† 'percentages' c√≥ ch·ª©a ph·∫ßn trƒÉm d√¢n s·ªë th·∫ø gi·ªõi c·ªßa 4 gi√° tr·ªã d√¢n s·ªë ƒë√≥. S·ª≠ d·ª•ng h√†m 'percentageOfWorld1' m√† b·∫°n ƒë√£ t·∫°o tr∆∞·ªõc ƒë√≥ ƒë·ªÉ t√≠nh to√°n 4 gi√° tr·ªã ph·∫ßn trƒÉm.

const percentages = [
    percentageOfWorld1(populations[0]),
    percentageOfWorld1(populations[1]),
    percentageOfWorld1(populations[2]),
    percentageOfWorld1(populations[3])
];

// In ra console
console.log(percentages);


// Lab 4.6. C√°c ph√©p to√°n c∆° b·∫£n v·ªõi array
console.log('Lab 4.6. C√°c ph√©p to√°n c∆° b·∫£n v·ªõi array ==>');

// T·∫°o m·ªôt array ch·ª©a t·∫•t c·∫£ c√°c n∆∞·ªõc l√°ng gi·ªÅng c·ªßa m·ªôt n∆∞·ªõc b·∫•t k·ª≥. Ch·ªçn m·ªôt n∆∞·ªõc c√≥ √≠t nh·∫•t 2 ho·∫∑c 3 n∆∞·ªõc l√°ng gi·ªÅng. L∆∞u array v√†o bi·∫øn 'neighbours'.
const neighbours = ['Lao', 'Campuchia', 'China'];
console.log(neighbours);

// ·ªû m·ªôt s·ªë th·ªùi ƒëi·ªÉm, m·ªôt ƒë·∫•t n∆∞·ªõc m·ªõi l√† 'Utopia' ƒë∆∞·ª£c t·∫°o ra trong v√πng l√¢n c·∫≠n c·ªßa qu·ªëc gia b·∫°n ch·ªçn. V·∫≠y h√£y th√™m n√≥ v√†o cu·ªëi array 'neighbours'.
neighbours.push('Utopia');
console.log('push :', neighbours);

// Kh√¥ng may, sau m·ªôt th·ªùi gian, n∆∞·ªõc m·ªõi n√†y bi·∫øn m·∫•t. V·∫≠y h√£y x√≥a n√≥ kh·ªèi cu·ªëi array.
neighbours.pop('Utopia');
console.log('pop :', neighbours);

// N·∫øu array 'neighbours' kh√¥ng ch·ª©a n∆∞·ªõc 'Germany', h√£y in ra console r·∫±ng: 'Probably not a central European country :D'.
console.log(neighbours.indexOf('Germany'));  // -1
neighbours.indexOf('Germany') === -1 ?
    console.log('Probably not a central European country :D') :
    console.log('It is a central European country :)');


console.log(neighbours.includes('Germany'));  // false
if (neighbours.includes('Germany') === false) {
    console.log('Probably not a central European country :D');
} else {
    console.log('It is a central European country :)');
};

// Thay ƒë·ªïi t√™n c·ªßa m·ªôt trong c√°c n∆∞·ªõc l√°ng gi·ªÅng c·ªßa b·∫°n. ƒê·ªÉ th·ª±c hi·ªán ƒëi·ªÅu ƒë√≥, h√£y t√¨m ch·ªâ m·ª•c c·ªßa ƒë·∫•t n∆∞·ªõc trong array 'neighbours', r·ªìi s·ª≠ d·ª•ng n√≥ ƒë·ªÉ thay ƒë·ªïi array ·ªü v·ªã tr√≠ ch·ªâ m·ª•c ƒë√≥. Ch·∫≥ng h·∫°n, n·∫øu b·∫°n t√¨m th·∫•y 'Sweden' trong array, h√£y thay n√≥ b·∫±ng 'Republic of Sweden'.
neighbours.indexOf('China');
console.log(neighbours.indexOf('China'));

neighbours[2] = 'Republic of China';
console.log(neighbours);

const index = neighbours.indexOf('Lao');
neighbours[index] = 'Laos';
console.log(neighbours);


// Lab 4.7.1. ƒê·ªôi n√†o chi·∫øn th·∫Øng? (ph·∫ßn 2)
console.log('Lab 4.7.1. ƒê·ªôi n√†o chi·∫øn th·∫Øng? (ph·∫ßn 2) ==>');

// 1. Nhi·ªám v·ª• c·ªßa b·∫°n:
// T·∫°o h√†m m≈©i t√™n 'calcAverage' ƒë·ªÉ t√≠nh trung b√¨nh c·ªßa 3 ƒëi·ªÉm s·ªë.
const calcAverage = (a, b, c) => (a + b + c) / 3;

// D·ªØ li·ªáu 1: Dolphins ghi ƒë∆∞·ª£c 44, 23 v√† 71 ƒëi·ªÉm. Koalas ghi ƒë∆∞·ª£c 65, 54 v√† 49 ƒëi·ªÉm.
//S·ª≠ d·ª•ng h√†m ƒë·ªÉ t√≠nh trung b√¨nh c·ªßa c·∫£ hai ƒë·ªôi.
let scoreDolphins = calcAverage(44, 23, 71);
let scoreKoalas = calcAverage(65, 54, 49);
console.log(scoreDolphins, scoreKoalas);

// T·∫°o h√†m 'checkWinner' nh·∫≠n ƒëi·ªÉm trung b√¨nh c·ªßa m·ªói ƒë·ªôi l√†m tham s·ªë ('avgDolphins' v√† 'avgKoalas'), sau ƒë√≥ in ƒë·ªôi th·∫Øng ra console c√πng v·ªõi s·ªë ƒëi·ªÉm gi√†nh chi·∫øn th·∫Øng theo lu·∫≠t tr√™n. V√≠ d·ª•: "Koalas win (30 vs. 13)".

const checkWinner = function (avgDolphins, avgKoalas) {
    if (avgDolphins >= 2 * avgKoalas) {
        console.log(` Dolphins win üèÜ (${avgDolphins} vs. ${avgKoalas})`);
    } else if (avgKoalas >= 2 * avgDolphins) {
        console.log(` Koalas win üèÜ (${avgKoalas} vs. ${avgDolphins})`);
    } else {
        // L·∫ßn n√†y h√£y b·ªè qua vi·ªác h√≤a.
        console.log(` No team wins...`);
    }
}

//D√πng h√†m 'checkWinner' ƒë·ªÉ x√°c ƒë·ªãnh ƒë·ªôi chi·∫øn th·∫Øng cho c·∫£ D·ªØ li·ªáu 1 v√† D·ªØ li·ªáu 2.
checkWinner(scoreDolphins, scoreKoalas);
checkWinner(11, 55);
checkWinner(55, 11);
checkWinner(11, 11);

// D·ªØ li·ªáu 2: Dolphins ghi ƒë∆∞·ª£c 85, 54 v√† 41 ƒëi·ªÉm. Koalas ghi ƒë∆∞·ª£c 23, 34 v√† 27 ƒëi·ªÉm.
scoreDolphins = calcAverage(85, 54, 41);
scoreKoalas = calcAverage(23, 34, 27);

console.log(scoreDolphins, scoreKoalas);

checkWinner(scoreDolphins, scoreKoalas);



// Lab 4.7.2. X√¢y d·ª±ng Tip calculator (ph·∫ßn 2)
console.log('Lab 4.7.2. X√¢y d·ª±ng Tip calculator (ph·∫ßn 2) ==>');

// 1. Nhi·ªám v·ª• c·ªßa b·∫°n:
// Vi·∫øt h√†m 'calcTip' nh·∫≠n gi√° tr·ªã h√≥a ƒë∆°n b·∫•t k·ª≥ l√†m ƒë·∫ßu v√†o v√† tr·∫£ v·ªÅ ti·ªÅn tip t∆∞∆°ng ·ª©ng, t√≠nh to√°n theo c√°c quy t·∫Øc ·ªü tr√™n (b·∫°n c√≥ th·ªÉ xem l·∫°i code t·ª´ th·ª≠ th√°ch tip calculator ƒë·∫ßu ti√™n n·∫øu c·∫ßn). S·ª≠ d·ª•ng lo·∫°i h√†m m√† b·∫°n th√≠ch nh·∫•t.

const calcTip = function (bill) {
    return bill <= 300 && bill >= 50 ? bill * 0.15 : bill * 0.2;
}
// Ki·ªÉm tra h√†m s·ª≠ d·ª•ng gi√° tr·ªã h√≥a ƒë∆°n l√† 100.
console.log(calcTip(100));

// Gi·ªù h√£y d√πng array. H√£y t·∫°o array 'bills' c√≥ ch·ª©a d·ªØ li·ªáu ki·ªÉm tra b√™n d∆∞·ªõi.
// 2. D·ªØ li·ªáu ki·ªÉm tra: 125, 555 v√† 44.
const bills = [125, 555, 44];

// T·∫°o array 'tips' c√≥ ch·ª©a gi√° tr·ªã ti·ªÅn tip cho t·ª´ng h√≥a ƒë∆°n, t√≠nh t·ª´ h√†m m√† b·∫°n ƒë√£ t·∫°o tr∆∞·ªõc ƒë√≥.
const tips = [calcTip(bills[0]), calcTip(bills[1]), calcTip(bills[2])];

// Bonus: T·∫°o array 'total' c√≥ ch·ª©a t·ªïng gi√° tr·ªã, t·ª©c l√† bill+tip.
const totals = [bills[0] + tips[0], bills[1] + tips[1], bills[2] + tips[2]];

console.log('Bills :', bills);
console.log('Tips :', tips);
console.log('Totals :', totals);

console.log(` The bill was ${bills[0]}, the tip was ${tips[0]}, and the total values ${totals[0]}`);
console.log(` The bill was ${bills[1]}, the tip was ${tips[1]}, and the total values ${totals[1]}`);
console.log(` The bill was ${bills[2]}, the tip was ${tips[2]}, and the total values ${totals[2]}`);


